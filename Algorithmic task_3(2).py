# Напишите функцию replace_duplicates, которая принимает на вход произвольную строку s.
# Функция должна заменять две одинаковые буквы на следующую по алфавиту букву.
# Несколько важных моментов:
# буквы не обязаны быть смежными (смежные - стоящие рядом;
# в строке 'abc' буквы a и b, а также b и c - являются смежными, в то время как a и c - нет)
# zz заменяем на a
# строка s состоит из букв английского алфавита в строчном регистре
# Повторяйте операцию, пока не останется никаких возможных замен.
# Функция должна вернуть строку с оставшимися буквами в любом порядке.

# второй вариант решения: строка преобраззована в список
# сравнение элементов списка и замена дубликатов

def replace_duplicates_v2(s):
    from string import ascii_lowercase

    # Преобразование строки в список
    s_list = list(s)

    # Создание словаря для сопоставления букв со следующими буквами в алфавите
    letter_map = {letter: ascii_lowercase[(i + 1) % 26] for i, letter in enumerate(ascii_lowercase)}

    # Флаг для отслеживания изменений в списке
    changes = True

    while changes:
        changes = False
        i = 0
        while i < len(s_list) - 1:
            # Проверка на наличие дублирующихся букв
            if s_list[i] == s_list[i + 1]:
                # Замена пары дубликатов следующей буквой в алфавите
                s_list[i] = letter_map[s_list[i]]
                # Удаление следующего дубликата
                del s_list[i + 1]
                changes = True
            else:
                i += 1

    # Возвращение преобразованной строки
    return ''.join(s_list)

# Тестовый пример
test_string = "abbcc"
replace_duplicates_v2(test_string)
